@using Newtonsoft.Json
@model WareHouseNJsound.Models.RequestViewModel

@{
    ViewBag.Title = "สร้างใบเบิก";
}

<!DOCTYPE html>
<meta charset="utf-8" />
<html lang="en">
<head>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" asp-href-include="~/lib/sweetalert2-11.10.8/package/dist/sweetalert2.css" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://unpkg.com/boxicons@2.1.4/dist/boxicons.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Domine:wght@598&family=Noto+Sans+Thai:wght@100..900&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.2.2/dist/select2-bootstrap-5-theme.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

    <style>
        body {
            font-family: 'Noto Sans Thai', sans-serif;
        }

        .table td, .table th {
            vertical-align: middle;
            font-family: 'Noto Sans Thai', sans-serif;
        }

        .btn-add {
            background-color: #fbc02d;
            color: white;
        }

        .btn-remove {
            background-color: #e53935;
            color: white;
        }

        .select2-container .select2-selection--single {
            height: 38px;
            padding: 6px 12px;
            border: 1px solid #ced4da;
        }

        /* แก้กากบาทที่อยู่ผิดตำแหน่ง */
        .select2-container--bootstrap-5 .select2-selection--single .select2-selection__clear {
            top: 50%;
            transform: translateY(-50%);
            right: 0.75rem;
            position: absolute;
        }

        /* ปรับความสูงให้กล่องดูสวยเหมือน input ทั่วไป */
        .select2-container--bootstrap-5 .select2-selection--single {
            height: calc(2.375rem + 2px); 
            padding: 0.375rem 0.75rem;
            display: flex;
            align-items: center;
        }

        /* ทำให้ข้อความอยู่ตรงกลาง */
        .select2-container--bootstrap-5 .select2-selection__rendered {
            line-height: normal;
        }

    </style>
</head>
<body>
<div class="container mt-4 p-4 bg-light rounded shadow-sm">
    <h1 class="mb-4">สร้างใบเบิกสินค้า</h1>

    <form asp-action="Create" method="post">
        <div class="form-group row">
            @* <label class="col-sm-3 col-form-label" type="hidden">รหัสการเบิก :</label> *@
            <div class="col-sm-9">
                <input asp-for="Request.RequestNumber" type="hidden" />
            </div>
        </div>

        <div class="form-group row mt-2">
            <label class="col-sm-3 col-form-label">ชื่อผู้เบิก :</label>
            <div class="col-sm-9">
                <select id="EmployeeSelect" asp-for="Request.Employee_ID" 
                    asp-items="@(new SelectList(Model.Employees ?? new List<WareHouseNJsound.Models.Employee>(), "Employee_ID", "FullName"))" 
                    class="form-control" required>

                    <option value="">-- เลือกพนักงาน --</option>
                </select>
            </div>
        </div>


            @for (int i = 0; i < Model.RequestDetails.Count; i++)
            {
                <div class="form-group row mt-2">
                    <label class="col-sm-3 col-form-label">ใช้สำหรับงาน :</label>
                    <div class="col-sm-9">
                        <select asp-for="RequestDetails[@i].Jobs_ID"
                            asp-items="@(new SelectList(ViewBag.Jobs ?? new List<Jobs>(), "JobsID", "JobsName"))"
                            class="form-control jobs-select" required
                            data-index="@i">
                            <option value="">-- เลือกงาน --</option>
                        </select>

                        <!-- ช่องเหตุผล (ซ่อนก่อน) -->
                        <div class="reason-box mt-2" id="reason-box-@i" style="display:none;">
                            <label class="d-block text-start">เหตุผล :</label>
                            <textarea name="RequestDetails[@i].Reason"
                                        class="form-control"></textarea>
                        </div>
                    </div>
                </div>
            }



        <div class="form-group row mt-2">
            <label class="col-sm-3 col-form-label">วันที่ :</label>
            <div class="col-sm-9">
                <input asp-for="Request.Request_Date" class="form-control" type="date" />
            </div>
        </div>
        

        <hr />

        <h3>รายการสินค้า</h3>
        

        <table class="table table-bordered text-center" id="itemTable">
            <thead class="table-secondary">
                <tr>
                    <th style="width: 5%;">ลำดับที่</th>
                    <th style="width: 20%;">อะไหล่</th>
                    <th>จำนวน</th>
                    <th>หน่วย</th>
                    <th></th>
                </tr>
            </thead>
            <tbody id="tableBody">
                <!-- Initial row will be inserted via JavaScript -->
            </tbody>
        </table>

   

        

        <div class="text-center mt-4">
            <button type="submit" class="btn btn-success px-4">บันทึก</button>
            
        </div>
    </form>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    let rowCount = 0;

    // ฟังก์ชันสร้างแถว (ยังไม่มีข้อมูลสินค้า แค่ input เฉย ๆ)
    function createRow(isFirstRow = false) {
        rowCount++;
        const row = document.createElement("tr");

        row.innerHTML = `
            <td>${rowCount}</td>
            <td><select name="RequestDetails[0].Materials_ID" class="form-control material-select">
                    <option value="">-- เลือกอะไหล่ --</option>
                    @foreach (var m in (ViewBag.Materials ?? new List<WareHouseNJsound.Models.Materials>()))
                    {
                        <option value="@m.Materials_ID" data-unit="@m.Unit?.UnitName">
                            @m.MaterialsName
                        </option>
                    }

                </select>
            </td>
            <td><input name="RequestDetails[0].Quantity" type="number" class="form-control" min="0" step="1" /></td>
                    <td class="unit-cell">-</td>
                    <td>
                ${isFirstRow
                    ? `<button type="button" class="btn btn-add btn-sm" onclick="addRow()">+</button>
`
                    : `<button type="button" class="btn btn-remove btn-sm" onclick="removeRow(this)">-</button>`}
            </td>
        `;

        return row;
    }

    // เพิ่มแถวใหม่
    function addRow() {
        const tableBody = document.getElementById("tableBody");
        const newRow = createRow(false);
        tableBody.appendChild(newRow);
        updateRowNumbers();
    }

    // ลบแถว
    function removeRow(button) {
        const row = button.closest("tr");
        row.remove();
        updateRowNumbers();
    }

    // อัปเดตเลขลำดับแถว
    function updateRowNumbers() {
    const rows = document.querySelectorAll("#tableBody tr");
    rows.forEach((tr, index) => {
        tr.children[0].textContent = index + 1; // เลขลำดับ

        // อัปเดต name ของ input/select ให้ตรง index ใหม่
        $(tr).find("select.material-select").attr("name", `RequestDetails[${index}].Materials_ID`);
        $(tr).find("input[type=number]").attr("name", `RequestDetails[${index}].Quantity`);
    });
    rowCount = rows.length;
}

    // สร้างแถวแรกตอนโหลด
    document.addEventListener("DOMContentLoaded", function () {
        document.getElementById("tableBody").appendChild(createRow(true));
    });


    //ดึงชื่อพนักงาน
    $(document).ready(function() {
        $('#Employee_ID').on('change', function() {
            var empId = $(this).val();
            if(empId) {
                $.ajax({
                    url: '@Url.Action("GetEmployeeName", "YourControllerName")',
                    type: 'GET',
                    data: { employeeId: empId },
                    success: function(name) {
                        $('#EmployeeName').val(name);
                    }
                });
            } else {
                $('#EmployeeName').val('');
            }
        });
    });

    $(document).on("change", ".material-select", function () {
    var selectedOption = $(this).find("option:selected");
    var unitName = selectedOption.data("unit") || "-";
    $(this).closest("tr").find(".unit-cell").text(unitName);
});


             // สร้าง Map Employee_ID => FullName
            var employeeMap = {
        @foreach (var emp in (Model.Employees ?? new List<WareHouseNJsound.Models.Employee>()))
        {
            <text>'@emp.Employee_ID': '@emp.FullName',</text>
        }

            };

            $(document).ready(function() {
                $('#EmployeeSelect').on('change', function() {
                    var empId = $(this).val();
                    $('#EmployeeName').val(empId ? employeeMap[empId] : '');
                });

                // ถ้า page โหลดแล้วมีค่า default
                var defaultId = $('#EmployeeSelect').val();
                if(defaultId) {
                    $('#EmployeeName').val(employeeMap[defaultId]);
                }
            });

            $(document).on("change", ".jobs-select", function () {
        let selectedValue = $(this).val();
        let index = $(this).data("index");

        if (selectedValue == "710") {
            $("#reason-box-" + index).show();
        } else {
            $("#reason-box-" + index).hide();
        }
    });

    $("form").on("submit", function (e) {
    let isValid = true;

    // ล้าง error เดิม
    $(".form-control").removeClass("is-invalid");

    // ตรวจ input และ select ทุกตัว
    $(this).find("input[required], select[required], textarea[required]").each(function () {
        if (!$(this).val()) {
            $(this).addClass("is-invalid");
            isValid = false;
        }
    });

    if (!isValid) {
        e.preventDefault(); // ยกเลิก submit
        Swal.fire({
            icon: 'error',
            title: 'กรอกข้อมูลไม่ครบ',
            text: 'กรุณากรอกข้อมูลให้ครบทุกช่อง'
        });
    }
});

$(document).ready(function() {
    var success = '@ViewBag.Success' === 'True';
    var requestNumber = '@ViewBag.RequestNumber';

    if(success && requestNumber) {
        Swal.fire({
            icon: 'success',
            title: 'บันทึกสำเร็จ!',
            text: 'เลขรหัสการเบิกของคุณคือ: ' + requestNumber,
            confirmButtonText: 'ตกลง'
        });
    }
});


</script>

</body>
</html>