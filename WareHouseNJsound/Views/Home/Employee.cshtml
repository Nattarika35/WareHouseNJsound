@{
    ViewData["Title"] = "Home Page";
}
@model IEnumerable<WareHouseNJsound.Models.Employee>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://unpkg.com/boxicons@2.1.4/dist/boxicons.js"></script>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Domine:wght@598&family=Noto+Sans+Thai:wght@100..900&display=swap" rel="stylesheet" />
    <style>
        /* Avatar วงกลมขนาด 60px */
        .avatar {
            border-radius: 50%;
            overflow: hidden;
            display: inline-block;
        }

            .avatar img {
                width: 100%;
                height: 100%;
                object-fit: cover; /* ครอบให้เต็มวง */
                display: block;
            }

        .avatar-60 {
            width: 60px;
            height: 60px;
        }

        .highlight {
            background-color: yellow;
            color: black;
            font-weight: bold;
        }

        body {
            font-family: sans-serif !important;
        }
    </style>
</head>

<body>
    <div class="container mt-3">
        <h1 style="font-family: 'Noto Sans Thai', sans-serif;">ข้อมูลพนักงาน</h1>
        <h3 style="font-family: 'Noto Sans Thai', sans-serif;">Employee</h3>

        <div class="mb-3 d-flex justify-content-between align-items-center" style="margin-bottom: 20px;">
            <a asp-controller="Home" asp-action="EmployeeCreate" class="btn btn-success" style="font-family: 'Noto Sans Thai', sans-serif;">
                <i class="bx bx-plus"></i> เพิ่มพนักงาน
            </a>





            <div>
                <input type="text" id="searchInput" class="form-control" placeholder="Search..." style="width: 300px;" />
            </div>
        </div>

        <table id="employeeTable" class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>Employee ID</th>
                    <th>Picture</th>
                    <th>ข้อมูลส่วนตัว</th>
                    <th>ที่อยู่อาศัย</th>
                    <th>สถานะ</th>
                    <th>จัดการ</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.Employee_ID</td>
                        <td class="avatar avatar-60">
                            @if (item.Picture != null && item.Picture.Length > 0)
                            {
                                var base64 = Convert.ToBase64String(item.Picture);
                                var imgSrc = $"data:image/jpeg;base64,{base64}";
                                <img src="@(imgSrc)" alt="@item.Employee_ID" style="max-width:80px; max-height:60px;" />
                            }
                            else
                            {
                                <span>ไม่มีรูป</span>
                            }
                        </td>
                        <td style="text-align: left;">
                            ชื่อ: @item.FullName <br />
                            เบอร์โทร: @item.Emp_Tel <br />
                            วันเกิด: @(
                        item.Brithdate.HasValue
                        ? item.Brithdate.Value.ToString("dd MMMM yyyy", new System.Globalization.CultureInfo("th-TH"))
                        : "-"
                        )
                            <br />
                            Email: @item.Email <br />
                            เลขบัตรประชาชน: @item.Personal_ID <br />
                        </td>
                        <td>
                            @item.Address <br />
                            
                        </td>
                        <td>
                            @if (item.Role_ID == 201)
                            {
                                <span class="badge bg-success">Admin</span>
                            }
                            else if (item.Role_ID == 202)
                            {
                                <span class="badge bg-info">พนักงาน</span>
                            }
                        </td>
                        <td>
                            <a asp-action="EmployeeEdit" asp-controller="Home" asp-route-id="@item.Employee_ID"
                               class="btn btn-sm btn-warning"><i class="bi bi-pencil"></i></a>
                            <button type="button" class="btn btn-sm btn-danger btn-delete" data-id="@item.Employee_ID">
                                <i class="bi bi-trash"></i>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @section Scripts {
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script>
            (function () {
                var message = @Html.Raw(
                TempData["SuccessMessage"] != null
                ? System.Text.Json.JsonSerializer.Serialize(TempData["SuccessMessage"])
                : "null"
                );
                if (message) {
                    Swal.fire({
                        icon: 'success',
                        title: 'สำเร็จ',
                        text: message,
                        confirmButtonColor: '#F4871E'
                    });
                }
            })();

            (function () {
                // เด้งแจ้งเตือนสำเร็จหลัง redirect (ของเดิม)
                var message = @Html.Raw(
                TempData["SuccessMessage"] != null
                ? System.Text.Json.JsonSerializer.Serialize(TempData["SuccessMessage"])
                : "null"
                );
                if (message) {
                    Swal.fire({ icon: 'success', title: 'สำเร็จ', text: message, confirmButtonColor: '#F4871E' });
                }

                // ---- ลบพนักงานแบบ AJAX ----
                const token = document.querySelector('#__af input[name="__RequestVerificationToken"]')?.value;

                document.querySelectorAll('.btn-delete').forEach(btn => {
                    btn.addEventListener('click', function () {
                        const id = this.getAttribute('data-id');
                        const row = this.closest('tr');
                        Swal.fire({
                            title: 'ยืนยันการลบ?',
                            text: `คุณต้องการลบพนักงานรหัส ${id} ใช่หรือไม่`,
                            icon: 'warning',
                            showCancelButton: true,
                            confirmButtonText: 'ลบ',
                            cancelButtonText: 'ยกเลิก',
                            confirmButtonColor: '#d33'
                        }).then(result => {
                            if (!result.isConfirmed) return;

                            fetch('@Url.Action("EmployeeDelete", "Home")', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
                                    'RequestVerificationToken': token // anti-forgery
                                },
                                body: new URLSearchParams({ id })
                            })
                                .then(async res => {
                                    const data = await res.json().catch(() => ({}));
                                    if (!res.ok || !data.ok) throw new Error(data.message || 'ลบไม่สำเร็จ');
                                    return data;
                                })
                                .then(data => {
                                    // เอาแถวออกจากตาราง
                                    row.style.opacity = '0.3';
                                    setTimeout(() => row.remove(), 200);
                                    Swal.fire({ icon: 'success', title: 'สำเร็จ', text: data.message, timer: 1500, showConfirmButton: false });
                                })
                                .catch(err => {
                                    Swal.fire({ icon: 'error', title: 'ผิดพลาด', text: err.message || 'ไม่สามารถลบได้' });
                                });
                        });
                    });
                });
            })();
            $(function () {
                // ----- กรองตามหมวดหมู่ -----
                $('#categoryFilter').on('change', function () {
                    var selectedCategory = $(this).val();
                    var url = '@Url.Action("All_Items", "Management")';
                    window.location.href = selectedCategory === 'all' ? url : (url + '?category=' + selectedCategory);
                });

                const $rows = $('#employeeTable tbody tr'); // ปรับให้ตรง id ตารางของคุณ

                function clearHighlights(rootEl) {
                    $(rootEl).find('mark.search-hl').each(function () {
                        this.replaceWith(document.createTextNode(this.textContent));
                    });
                    // รวม text nodes ที่ติดกันให้เรียบ
                    if (rootEl.nodeType === 1 && rootEl.normalize) rootEl.normalize();
                }

                // หุ้มเฉพาะ text nodes ที่ตรงกับคำค้น
                function highlightNode(rootEl, q) {
                    if (!q) return;
                    const walker = document.createTreeWalker(rootEl, NodeFilter.SHOW_TEXT, {
                        acceptNode(node) {
                            const t = node.nodeValue;
                            if (!t || !t.trim()) return NodeFilter.FILTER_REJECT;
                            const p = node.parentNode && node.parentNode.nodeName;
                            if (p === 'SCRIPT' || p === 'STYLE') return NodeFilter.FILTER_REJECT;
                            return NodeFilter.FILTER_ACCEPT;
                        }
                    });
                    const nodes = [];
                    while (walker.nextNode()) nodes.push(walker.currentNode);

                    nodes.forEach(node => {
                        const text = node.nodeValue;
                        const lower = text.toLowerCase();
                        const qlen = q.length;
                        let start = 0, idx = lower.indexOf(q);
                        if (idx === -1) return;

                        const frag = document.createDocumentFragment();
                        while (idx !== -1) {
                            frag.appendChild(document.createTextNode(text.slice(start, idx)));
                            const mark = document.createElement('mark');
                            mark.className = 'search-hl';
                            mark.textContent = text.substr(idx, qlen);
                            frag.appendChild(mark);
                            start = idx + qlen;
                            idx = lower.indexOf(q, start);
                        }
                        frag.appendChild(document.createTextNode(text.slice(start)));
                        node.parentNode.replaceChild(frag, node);
                    });
                }

                // เล็กน้อย: debounce กันกระตุก
                let timer = null;
                $('#searchInput').on('input', function () {
                    clearTimeout(timer);
                    timer = setTimeout(() => {
                        const q = this.value.trim().toLowerCase();
                        $rows.each(function () {
                            clearHighlights(this);
                            if (!q) { this.style.display = ''; return; }
                            const match = this.textContent.toLowerCase().includes(q);
                            this.style.display = match ? '' : 'none';
                            if (match) highlightNode(this, q);
                        });
                    }, 120);
                });

                // SweetAlert จาก TempData (ของเดิมใช้ต่อได้)
                var message = @Html.Raw(TempData["SuccessMessage"] != null
                ? System.Text.Json.JsonSerializer.Serialize(TempData["SuccessMessage"])
                : "null");
                if (message) Swal.fire({ icon: 'success', title: 'สำเร็จ', text: message, confirmButtonText: 'ตกลง' });
            });
        </script>
    }

</body>
</html>
