@{
    ViewData["Title"] = "Home Page";
}
@model IEnumerable<WareHouseNJsound.Models.Employee>
@using System.Text.Json

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://unpkg.com/boxicons@2.1.4/dist/boxicons.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+Thai:wght@300;400;600;700&display=swap" rel="stylesheet">

    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <style>
        mark.search-hl {
            background: #fff59d;
            padding: 0 2px;
            border-radius: 2px;
        }
        /* Avatar วงกลมขนาด 60px */
        .avatar {
            border-radius: 50%;
            overflow: hidden;
            display: inline-block;
        }

            .avatar img {
                width: 100%;
                height: 100%;
                object-fit: cover; /* ครอบให้เต็มวง */
                display: block;
            }

        .avatar-60 {
            width: 60px;
            height: 60px;
        }
        /* ปรับขนาดตามต้องการ */

        .highlight {
            background-color: yellow;
            color: black;
            font-weight: bold;
        }

        body {
            font-family: sans-serif !important;
        }
    </style>   
</head>

<body>
<div class="container mt-3">
        <h1 style="font-family: 'Noto Sans Thai', sans-serif;">ข้อมูลสมาชิกในระบบ</h1>
        <h3 style="font-family: 'Noto Sans Thai', sans-serif;">Admin</h3>

        <div class="mb-3 d-flex justify-content-between align-items-center" style="margin-bottom: 20px;">
            <a asp-controller="Home" asp-action="AdminCreate" class="btn btn-success" style="font-family: 'Noto Sans Thai', sans-serif;">
                <i class="bx bx-plus"></i> เพิ่ม Admin
            </a>

            <div>
                <input type="text" id="searchInput" class="form-control" placeholder="Search..." style="width: 300px;" />
            </div>
        </div>

    <table id="employeeTable" class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>Employee ID</th>
                <th>Picture</th>
                <th>Username</th>
                <th>ข้อมูลส่วนตัว</th>
                <th>ที่อยู่อาศัย</th>
                <th>สถานะ</th>
                <th>จัดการ</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Employee_ID</td>
                        <td class="text-center align-middle">
                            @{
                                var hasPic = item.Picture != null && item.Picture.Length > 0;
                                var src = hasPic
                                ? $"data:image/jpeg;base64,{Convert.ToBase64String(item.Picture)}"
                                : Url.Content("~/img/default-profile.png"); // ถ้าไม่มีรูป ใช้รูปเริ่มต้น
                            }
                            <div class="avatar avatar-60">
                                <img src="@src" alt="@item.Employee_ID" />
                            </div>
                        </td>

                    <td>
                        @item.Username <br />
                            
                    </td>
                    <td>
                        ชื่อ: @item.FullName <br />
                            เบอร์โทร: @item.Emp_Tel <br />
                            Email: @item.Email
                    </td>
                    <td>
                        @item.Address <br />
                        
                    </td>
                    <td>
                        @if (item.Role_ID == 201)
                        {
                            <span class="badge bg-success">Admin</span>
                        }
                        else if (item.Role_ID == 202)
                        {
                            <span class="badge bg-info">Member</span>
                        }
                    </td>
                    <td>
                            <a asp-action="AdminEdit" asp-controller="Home" asp-route-id="@item.Employee_ID"
                               class="btn btn-sm btn-warning">
                                <i class="bi bi-pencil"></i>
                            </a>
                            <button type="button" class="btn btn-sm btn-danger btn-delete" data-id="@item.Employee_ID">
                                <i class="bi bi-trash"></i>
                            </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
</body>
</html>
<script>
    $(function () {
        // ----- กรองตามหมวดหมู่ -----
        $('#categoryFilter').on('change', function () {
            var selectedCategory = $(this).val();
            var url = '@Url.Action("All_Items", "Management")';
            window.location.href = selectedCategory === 'all' ? url : (url + '?category=' + selectedCategory);
        });

        const $rows = $('#employeeTable tbody tr'); // ปรับให้ตรง id ตารางของคุณ

        function clearHighlights(rootEl) {
            $(rootEl).find('mark.search-hl').each(function () {
                this.replaceWith(document.createTextNode(this.textContent));
            });
            // รวม text nodes ที่ติดกันให้เรียบ
            if (rootEl.nodeType === 1 && rootEl.normalize) rootEl.normalize();
        }

        // หุ้มเฉพาะ text nodes ที่ตรงกับคำค้น
        function highlightNode(rootEl, q) {
            if (!q) return;
            const walker = document.createTreeWalker(rootEl, NodeFilter.SHOW_TEXT, {
                acceptNode(node) {
                    const t = node.nodeValue;
                    if (!t || !t.trim()) return NodeFilter.FILTER_REJECT;
                    const p = node.parentNode && node.parentNode.nodeName;
                    if (p === 'SCRIPT' || p === 'STYLE') return NodeFilter.FILTER_REJECT;
                    return NodeFilter.FILTER_ACCEPT;
                }
            });
            const nodes = [];
            while (walker.nextNode()) nodes.push(walker.currentNode);

            nodes.forEach(node => {
                const text = node.nodeValue;
                const lower = text.toLowerCase();
                const qlen = q.length;
                let start = 0, idx = lower.indexOf(q);
                if (idx === -1) return;

                const frag = document.createDocumentFragment();
                while (idx !== -1) {
                    frag.appendChild(document.createTextNode(text.slice(start, idx)));
                    const mark = document.createElement('mark');
                    mark.className = 'search-hl';
                    mark.textContent = text.substr(idx, qlen);
                    frag.appendChild(mark);
                    start = idx + qlen;
                    idx = lower.indexOf(q, start);
                }
                frag.appendChild(document.createTextNode(text.slice(start)));
                node.parentNode.replaceChild(frag, node);
            });
        }

        // เล็กน้อย: debounce กันกระตุก
        let timer = null;
        $('#searchInput').on('input', function () {
            clearTimeout(timer);
            timer = setTimeout(() => {
                const q = this.value.trim().toLowerCase();
                $rows.each(function () {
                    clearHighlights(this);
                    if (!q) { this.style.display = ''; return; }
                    const match = this.textContent.toLowerCase().includes(q);
                    this.style.display = match ? '' : 'none';
                    if (match) highlightNode(this, q);
                });
            }, 120);
        });

        // SweetAlert จาก TempData (ของเดิมใช้ต่อได้)
        var message = @Html.Raw(TempData["SuccessMessage"] != null
            ? System.Text.Json.JsonSerializer.Serialize(TempData["SuccessMessage"])
            : "null");
        if (message) Swal.fire({ icon: 'success', title: 'สำเร็จ', text: message, confirmButtonText: 'ตกลง' });
    });

    $(document).on("click", ".btn-delete", function () {
        const id = $(this).data("id");

        Swal.fire({
            title: 'ยืนยันการลบ?',
            text: "คุณต้องการลบ Admin นี้ใช่หรือไม่",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'ใช่, ลบเลย',
            cancelButtonText: 'ยกเลิก'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '@Url.Action("DeleteAdmin", "Home")',
                    type: 'POST',
                    data: { id: id },
                    success: function (res) {
                        if (res.success) {
                            Swal.fire('ลบแล้ว!', 'ลบข้อมูลเรียบร้อยแล้ว', 'success')
                                .then(() => {
                                    location.reload();
                                });
                        } else {
                            Swal.fire('ผิดพลาด', 'ไม่สามารถลบข้อมูลได้', 'error');
                        }
                    },
                    error: function () {
                        Swal.fire('ผิดพลาด', 'เกิดข้อผิดพลาดในการลบข้อมูล', 'error');
                    }
                });
            }
        });
    });
</script>

